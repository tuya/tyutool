name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: Configure Git
        run: |
          git config --global user.name "Github Action"  # 保留，不需要修改
          git config --global user.email "action@github.com"  # 保留，不需要修改

      - name: Add Gitee Remote
        run: |
          git remote add gitee https://flyingcys:${{ secrets.GITEE_TOKEN }}@gitee.com/${{ secrets.GITEE_REPO }}.git  # token from flyingcys

      - name: Push to Gitee
        run: git push gitee --tags --force

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Make build script executable
        run: chmod +x ./tools/build_package.sh

      - name: Build package
        run: ./tools/build_package.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            dist/linux_tyutool_cli.tar.gz
            dist/linux_tyutool_gui.tar.gz
            dist/ideserial.json
            dist/upgrade_config.json

  build-macos-x86:
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Make build script executable
        run: chmod +x ./tools/build_package.sh

      - name: Build package
        run: ./tools/build_package.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-x86-artifacts
          path: |
            dist/darwin_x86_tyutool_cli.tar.gz
            dist/darwin_x86_tyutool_gui.tar.gz

  build-macos-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Make build script executable
        run: chmod +x ./tools/build_package.sh

      - name: Build package
        run: ./tools/build_package.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm-artifacts
          path: |
            dist/darwin_arm64_tyutool_cli.tar.gz
            dist/darwin_arm64_tyutool_gui.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build package
        run: .\tools\build_package.bat

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/windows_tyutool_cli.zip
            dist/windows_tyutool_gui.zip

  release:
    runs-on: ubuntu-latest
    needs: [sync, build-linux, build-macos-x86, build-macos-arm, build-windows]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/linux-artifacts/*
            artifacts/macos-x86-artifacts/*
            artifacts/macos-arm-artifacts/*
            artifacts/windows-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync-release-to-gitee:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Gitee Release
        run: |
          TAG_NAME="${{ github.ref_name }}"

          RELEASE_INFO=$(curl -X POST 'https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/releases' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: token ${{ secrets.GITEE_TOKEN }}' \
          -d '{
            "tag_name": "${{ github.ref_name }}",
            "target_commitish": "master",
            "name": "Release ${{ github.ref_name }}",
            "body": "${{ github.ref_name }}",
            "draft": false,
            "prerelease": false
          }')
          # echo $RELEASE_INFO

          RELEASE_ID=$(echo "$RELEASE_INFO" | jq -r '.id')
          # echo $RELEASE_ID

          find artifacts -type f | while read -r file_path; do
              echo "| $file_path"
              curl -X POST "https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/releases/$RELEASE_ID/attach_files" \
          -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
          -F "file=@$file_path"
          done
